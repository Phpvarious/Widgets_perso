{
    "name": "Info du jour",
    "isActive": "1",
    "group": "",
    "mode": "schedule",
    "schedule": "*\/5 * * * *",
    "trigger": [
        ""
    ],
    "timeout": "0",
    "object_id": null,
    "isVisible": "0",
    "display": {
        "name": "",
        "icon": "<i class=\"icon divers-today1 icon_blue\"><\/i>",
        "width": "432px",
        "height": "92px"
    },
    "order": "9999",
    "description": "Auteur : @Phpvarious\nGithub --> https:\/\/phpvarious.github.io\/documentation\/widget\/fr_FR\/widget_scenario\/info_du_jour\/\nInfos vacances Max --> 2026\/09\/01, après faudra mettre à jour le scenario.",
    "configuration": {
        "timeDependency": 0,
        "has_return": 0,
        "logmode": "default",
        "allowMultiInstance": "0",
        "syncmode": "0",
        "timeline::enable": "0",
        "timeline::folder": ""
    },
    "elements": [
        {
            "name": "",
            "type": "comment",
            "options": [],
            "order": "0",
            "subElements": [
                {
                    "name": "",
                    "type": "comment",
                    "subtype": "comment",
                    "options": {
                        "collapse": "0"
                    },
                    "order": "0",
                    "expressions": [
                        {
                            "type": "comment",
                            "subtype": "",
                            "expression": "Auteur : @Phpvarious\nDate de création: 04\/12\/2021\nVersion actuelle : 11\/04\/2023",
                            "options": [],
                            "order": "0"
                        }
                    ]
                }
            ]
        },
        {
            "name": "",
            "type": "action",
            "options": [],
            "order": "0",
            "subElements": [
                {
                    "name": "",
                    "type": "action",
                    "subtype": "action",
                    "options": {
                        "collapse": "0",
                        "enable": "1"
                    },
                    "order": "0",
                    "expressions": [
                        {
                            "type": "action",
                            "subtype": "",
                            "expression": "tag",
                            "options": {
                                "enable": "1",
                                "background": "0",
                                "name": "zone",
                                "value": "B"
                            },
                            "order": "0"
                        }
                    ]
                }
            ]
        },
        {
            "name": "",
            "type": "action",
            "options": [],
            "order": "0",
            "subElements": [
                {
                    "name": "",
                    "type": "action",
                    "subtype": "action",
                    "options": {
                        "collapse": "0",
                        "enable": "1"
                    },
                    "order": "0",
                    "expressions": [
                        {
                            "type": "element",
                            "subtype": "",
                            "expression": "2021",
                            "options": [],
                            "order": "0",
                            "element": {
                                "name": "",
                                "type": "code",
                                "options": [],
                                "order": "0",
                                "subElements": [
                                    {
                                        "name": "",
                                        "type": "code",
                                        "subtype": "action",
                                        "options": {
                                            "collapse": "1",
                                            "enable": "1"
                                        },
                                        "order": "0",
                                        "expressions": [
                                            {
                                                "type": "code",
                                                "subtype": "",
                                                "expression": "\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ VACANCES SCOLAIRE \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\n$scenario->setLog('┌─────────────────── VACANCES SCOLAIRE');\n$tags = $scenario->getTags(); \/\/récupère la liste des tags\nif (empty($tags['#zone#'])) $tags['#zone#'] = 'B';\n$zone = $tags['#zone#']; \/\/ A,B ou C pour Vacances\nif ($zone != 'A' && $zone != 'B' && $zone != 'C') $zone = 'B';\n$scenario->setLog('| Zone : '.$zone);\n\/\/$url = \"http:\/\/telechargement.index-education.com\/vacances.xml\"; \/\/ pour Vacances\n$today = date(\"Y\/m\/d\");\n\/\/$today = \"2022\/02\/20\"; \/\/ for test\n\n$queryLibelleVacances = array(\"Vacances de la Toussaint\",\"Vacances de Noël\",\"Vacances d'hiver\",\"Vacances de printemps\",\"Vacances d'été\",\"Pont de l'Ascension\");\n$queryIdVacances = array(1,2,3,4,5,12);\n\nswitch($zone)\n{\n  case 'A': \n    $queryDebutVacances = array(\"2022\/04\/16\",\"2022\/05\/26\",\"2022\/07\/07\",\"2022\/10\/22\",\"2022\/12\/17\",\"2023\/02\/04\",\"2023\/04\/08\",\"2023\/05\/18\",\"2023\/07\/08\",\"2023\/10\/21\",\"2023\/12\/23\",\"2024\/02\/17\",\"2024\/04\/13\",\"2024\/05\/09\",\"2024\/07\/06\",\"2024\/10\/19\",\"2024\/12\/21\",\"2025\/02\/22\",\"2025\/04\/19\",\"2025\/05\/29\",\"2025\/07\/05\",\"2025\/10\/18\",\"2025\/12\/20\",\"2026\/02\/07\",\"2026\/04\/04\",\"2026\/05\/14\",\"2026\/07\/04\");\n    $queryFinVacances = array(\"2022\/05\/02\",\"2022\/05\/30\",\"2022\/09\/01\",\"2022\/11\/07\",\"2023\/01\/03\",\"2023\/02\/20\",\"2023\/04\/24\",\"2023\/05\/22\",\"2023\/09\/04\",\"2023\/11\/06\",\"2024\/01\/08\",\"2024\/03\/04\",\"2024\/04\/29\",\"2024\/05\/13\",\"2024\/09\/02\",\"2024\/11\/04\",\"2025\/01\/06\",\"2025\/03\/10\",\"2025\/05\/05\",\"2025\/06\/02\",\"2025\/09\/01\",\"2025\/11\/03\",\"2026\/01\/05\",\"2026\/02\/23\",\"2026\/04\/20\",\"2026\/05\/18\",\"2026\/09\/01\");\n    $queryNumVacances = array(4,12,5,1,2,3,4,12,5,1,2,3,4,12,5,1,2,3,4,12,5,1,2,3,4,12,5);    \n    break;\n  case 'B': \n    $queryDebutVacances = array(\"2022\/04\/09\",\"2022\/05\/26\",\"2022\/07\/07\",\"2022\/10\/22\",\"2022\/12\/17\",\"2023\/02\/11\",\"2023\/04\/15\",\"2023\/05\/18\",\"2023\/07\/08\",\"2023\/10\/21\",\"2023\/12\/23\",\"2024\/02\/24\",\"2024\/04\/20\",\"2024\/05\/09\",\"2024\/07\/06\",\"2024\/10\/19\",\"2024\/12\/21\",\"2025\/02\/08\",\"2025\/04\/05\",\"2025\/05\/29\",\"2025\/07\/05\",\"2025\/10\/18\",\"2025\/12\/20\",\"2026\/02\/14\",\"2026\/04\/11\",\"2026\/05\/14\",\"2026\/07\/04\");\n    $queryFinVacances = array(\"2022\/04\/25\",\"2022\/05\/30\",\"2022\/09\/01\",\"2022\/11\/07\",\"2023\/01\/03\",\"2023\/02\/27\",\"2023\/05\/02\",\"2023\/05\/22\",\"2023\/09\/04\",\"2023\/11\/06\",\"2024\/01\/08\",\"2024\/03\/11\",\"2024\/05\/06\",\"2024\/05\/13\",\"2024\/09\/02\",\"2024\/11\/04\",\"2025\/01\/06\",\"2025\/02\/24\",\"2025\/04\/22\",\"2025\/06\/02\",\"2025\/09\/01\",\"2025\/11\/03\",\"2026\/01\/05\",\"2026\/03\/02\",\"2026\/04\/27\",\"2026\/05\/18\",\"2026\/09\/01\");\n    $queryNumVacances = array(4,12,5,1,2,3,4,12,5,1,2,3,4,12,5,1,2,3,4,12,5,1,2,3,4,12,5);  \n    break;    \n  case 'C': \n    $queryDebutVacances = array(\"2022\/04\/23\",\"2022\/05\/26\",\"2022\/07\/07\",\"2022\/10\/22\",\"2022\/12\/17\",\"2023\/02\/18\",\"2023\/04\/22\",\"2023\/05\/18\",\"2023\/07\/08\",\"2023\/10\/21\",\"2023\/12\/23\",\"2024\/02\/10\",\"2024\/04\/06\",\"2024\/05\/09\",\"2024\/07\/06\",\"2024\/10\/19\",\"2024\/12\/21\",\"2025\/02\/15\",\"2025\/04\/12\",\"2025\/05\/29\",\"2025\/07\/05\",\"2025\/10\/18\",\"2025\/12\/20\",\"2026\/02\/21\",\"2026\/04\/18\",\"2026\/05\/14\",\"2026\/07\/04\");\n    $queryFinVacances = array(\"2022\/05\/09\",\"2022\/05\/30\",\"2022\/09\/01\",\"2022\/11\/07\",\"2023\/01\/03\",\"2023\/03\/06\",\"2023\/05\/09\",\"2023\/05\/22\",\"2023\/09\/01\",\"2023\/11\/06\",\"2024\/01\/08\",\"2024\/02\/26\",\"2024\/04\/22\",\"2024\/05\/13\",\"2024\/09\/02\",\"2024\/11\/04\",\"2025\/01\/06\",\"2025\/03\/03\",\"2025\/04\/28\",\"2025\/06\/02\",\"2025\/09\/01\",\"2025\/11\/03\",\"2026\/01\/05\",\"2026\/03\/09\",\"2026\/05\/04\",\"2026\/05\/18\",\"2026\/09\/01\");\n    $queryNumVacances = array(4,12,5,1,2,3,4,12,5,1,2,3,4,12,5,1,2,3,4,12,5,1,2,3,4,12,5); \n    break;\n}\n\n$debutVacances = \"\";\n$finVacances = \"\";\n$enVacances = 0;\n$vacancesEcLibelle = \"\";\n$prochainDebutVacance = \"\";\n$prochainFinVacance = \"\";\n$prochainLibelleVacances = \"\";\n$diffVacances = \"\";\n$erreur = false;\n$findonnee = false;\n\n$nbMax = count($queryDebutVacances);\nif ($nbMax != count($queryFinVacances) || $nbMax != count($queryNumVacances)) $erreur = true;\n$i=0;\nif (!$erreur)\n{    \n  foreach ($queryFinVacances as $vacance) {\n    \/\/if ($today <= $vacance) {\n    if ($today < $vacance) {\n      $key = array_search($queryNumVacances[$i],$queryIdVacances);\n      $libelleVacances = $queryLibelleVacances[$key];\n      if ($queryDebutVacances[$i] <= $today) {\n        $debutVacances = $queryDebutVacances[$i];\n        $finVacances = $vacance;\n        $enVacances = 1;\n        $vacancesEcLibelle = $queryLibelleVacances[$key];\n        $i++;\n        if ($i < $nbMax)\n        {\n          $prochainDebutVacance = $queryDebutVacances[$i];\n          $prochainFinVacance = $queryFinVacances[$i];\n          $key = array_search($queryNumVacances[$i],$queryIdVacances);\n          $prochainLibelleVacance = $queryLibelleVacances[$key];\n        }\n        else $findonnee = true;\n      } \n      else \n      {        \n        $prochainDebutVacance = $queryDebutVacances[$i];\n        $prochainFinVacance = $vacance;\n        $prochainLibelleVacance = $libelleVacances;\n      }\n      break;      \n    }\n    else if ($i == ($nbMax-1)) $findonnee = true;\n    $i++;\n  } \n  if (!$findonnee){\n    $diffDebutVacance = new DateTime($prochainDebutVacance);\n    $diffToday = new DateTime($today);\n    $diffVacances = $diffDebutVacance->diff($diffToday)->format(\"%a\");\n\n    $debutVacancesWidget = ($debutVacances != \"\") ? date(\"d\/m\/Y\",strtotime($debutVacances)):\"\";\n    $debutVacancesScenario = ($debutVacances != \"\") ? date(\"Y-m-d\",strtotime($debutVacances)):\"\";\n    $finVacancesWidget = ($finVacances != \"\") ? date(\"d\/m\/Y\",strtotime($finVacances)):\"\";\n    $finVacancesScenario = ($finVacances != \"\") ? date(\"Y-m-d\",strtotime($finVacances)):\"\";\n    \n    $prochainDebutVacanceWidget = ($prochainDebutVacance != \"\") ? date(\"d\/m\/Y\",strtotime($prochainDebutVacance)):\"\";\n    $prochainDebutVacanceScenario = ($prochainDebutVacance != \"\") ? date(\"Y-m-d\",strtotime($prochainDebutVacance)):\"\";    \/\/erreur\n    $prochainFinVacanceWidget = ($prochainFinVacance != \"\") ? date(\"d\/m\/Y\",strtotime($prochainFinVacance)):\"\";\n    $prochainFinVacanceScenario = ($prochainFinVacance != \"\") ? date(\"Y-m-d\",strtotime($prochainFinVacance)):\"\";\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ LOG \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/   \n    $scenario->setLog('| ------------------ EN COURS -----------------');\n    $scenario->setLog('| tag(vacancesEnCours) - [Binaire] : ' . $enVacances);\n    $scenario->setLog('| tag(vacancesEnCoursLibelle) - [Autre] : ' . $vacancesEcLibelle);\n    $scenario->setLog('| tag(debutVacancesEnCours) - [Autre] : ' . $debutVacancesScenario);\n    $scenario->setLog('| tag(finVacancesEnCours) - [Autre] : ' . $finVacancesScenario);\n    $scenario->setLog('| ------------------ PROCHAIN -----------------');\n    $scenario->setLog('| tag(vacancesPochainesLibelle) - [Autre] : ' . $prochainLibelleVacance);\n    $scenario->setLog('| tag(debutVacancesProchaines) - [Autre] : ' . $prochainDebutVacanceScenario);\n    $scenario->setLog('| tag(finVacancesProchaines) - [Autre] : ' . $prochainFinVacanceScenario);   \n    $scenario->setLog('| tag(nbProchainesVacances) - [Numérique] : ' . $diffVacances);\n  }\n  else $scenario->setLog('| [ERROR] Veuillez mettre a jour les données pour les vacances !!!');\n}\nelse $scenario->setLog('| [ERROR] Une erreur a été detectée dans les données de configuration des vacances !!!');\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ TAG \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$tags['#vacancesEnCours#'] = $enVacances;\n$tags['#vacancesEnCoursLibelle#'] = $vacancesEcLibelle;\n$tags['#debutVacancesEnCours#'] = '\"'.$debutVacancesScenario.'\"';\n$tags['#finVacancesEnCours#'] = '\"'.$finVacancesScenario.'\"';\n$tags['#vacancesPochainesLibelle#'] = $prochainLibelleVacance;\n$tags['#debutVacancesProchaines#'] = '\"'.$prochainDebutVacanceScenario.'\"';\n$tags['#finVacancesProchaines#'] = '\"'.$prochainFinVacanceScenario.'\"';\n$tags['#nbProchainesVacances#'] = $diffVacances;\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ WIDGET \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$tags['#json#']['Vacances'] = array (\n  \"vacancesEnCours\" => $enVacances,\n  \"vacancesEnCoursLibelle\" => $vacancesEcLibelle,\n  \"debutVacancesEnCours\" => $debutVacancesWidget,\n  \"finVacancesEnCours\" => $finVacancesWidget,\n  \"vacancesPochainesLibelle\" => $prochainLibelleVacance,\n  \"debutVacancesProchaines\" => $prochainDebutVacanceWidget,\n  \"finVacancesProchaines\" => $prochainFinVacanceWidget,\n  \"nbProchainesVacances\" => $diffVacances\n);\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$scenario->setTags($tags);\n$scenario->setLog('└───────────────────────────');",
                                                "options": [],
                                                "order": "0"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "element",
                            "subtype": "",
                            "expression": "2022",
                            "options": [],
                            "order": "1",
                            "element": {
                                "name": "",
                                "type": "code",
                                "options": [],
                                "order": "0",
                                "subElements": [
                                    {
                                        "name": "",
                                        "type": "code",
                                        "subtype": "action",
                                        "options": {
                                            "collapse": "1",
                                            "enable": "1"
                                        },
                                        "order": "0",
                                        "expressions": [
                                            {
                                                "type": "code",
                                                "subtype": "",
                                                "expression": "\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ SAINT DU JOUR \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$scenario->setLog('┌─────────────────── SAINT DU JOUR');\n$tags = $scenario->getTags(); \/\/récupère la liste des tags\n$date = date(\"Y-m-d\");\n\/\/$date = date(\"2023-04-12\"); \/\/ for test\nfunction saint($jour,$mois){\n  switch($mois)\n  {\n    case 1:\n      switch($jour)\n      {\n        case 1: $saint = \"Jour de l'an\";\n        break;\n        case 2: $saint = \"Saint Basile\";\n            break;\n        case 3: $saint = \"Sainte Geneviève\";\n            break;\n        case 4: $saint = \"Saint Odilon\";\n            break;\n        case 5: $saint = \"Saint Edouard\";\n            break;\n        case 6: $saint = \"Sainte Mélanie\";\n            break;\n        case 7: $saint = \"Saint Raymond\";\n            break;\n        case 8: $saint = \"Saint Lucien\";\n            break;\n        case 9: $saint = \"Sainte Alix\";\n            break;\n        case 10: $saint = \"Saint Guillaume\";\n            break;\n        case 11: $saint = \"Saint Paulin\";\n            break;\n        case 12: $saint = \"Sainte Tatiana\";\n            break;\n        case 13: $saint  = \"Sainte Yvette\";\n            break;\n        case 14: $saint  = \"Sainte Nina\";\n            break;\n        case 15: $saint  = \"Saint Rémi\";\n            break;\n        case 16: $saint  = \"Saint Marcel\";\n            break;\n        case 17: $saint  = \"Sainte Roseline\";\n            break;\n        case 18: $saint  = \"Sainte Prisca\";\n            break;\n        case 19: $saint  = \"Saint Marius\";\n            break;\n        case 20: $saint  = \"Saint Sébastien\";\n            break;\n        case 21: $saint  = \"Sainte Agnès\";\n            break;\n        case 22: $saint = \"Saint Vincent\";\n            break;\n        case 23: $saint = \"Saint Barnard\";\n            break;\n        case 24: $saint = \"Saint François\";\n            break;\n        case 25: $saint = \"Conv de Saint Paul\";\n            break;\n        case 26: $saint = \"Saint Timothée\";\n            break;\n        case 27: $saint = \"Sainte Angèle\";\n            break;\n        case 28: $saint = \"Saint Thomas d'Aquin\";\n            break;\n        case 29: $saint = \"Saint Gildas\";\n            break;\n        case 30: $saint = \"Sainte Martine\";\n            break;\n        case 31: $saint = \"Sainte Marcelle\";\n        break;\n      }\n      break;\n    case 2:\n      switch($jour)\n      {\n        case 1: $saint = \"Sainte Ella\";\n          break;\n        case 2: $saint = \"Présentation\";\n          break;\n        case 3: $saint = \"Saint Blaise\";\n          break;\n        case 4: $saint = \"Sainte Véronique\";\n          break;\n        case 5: $saint = \"Sainte Agathe\";\n          break;\n        case 6: $saint = \"Saint Gaston\";\n          break;\n        case 7: $saint = \"Sainte Eugénie\";\n          break;\n        case 8: $saint = \"Sainte Jacqueline\";\n          break;\n        case 9: $saint = \"Sainte Apolline\";\n          break;\n        case 10: $saint = \"Saint Arnaud\";\n          break;\n        case 11: $saint = \"N-D de Lourdes\";\n          break;\n        case 12: $saint = \"Saint Félix\";\n          break;\n        case 13: $saint = \"Sainte Béatrice\";\n          break;\n        case 14: $saint = \"Saint Valentin\";\n          break;\n        case 15: $saint = \"Saint Claude\";\n          break;\n        case 16: $saint = \"Sainte Julienne\";\n          break;\n        case 17: $saint = \"Saint Alexis\";\n          break;\n        case 18: $saint = \"Sainte Bernadette\";\n          break;\n        case 19: $saint = \"Saint Gabin\";\n          break;\n        case 20: $saint = \"Sainte Aimée\";\n          break;\n        case 21: $saint = \"Saint Damien\";\n          break;\n        case 22: $saint = \"Sainte Isabelle\";\n          break;\n        case 23: $saint = \"Saint Lazare\";\n          break;\n        case 24: $saint = \"Saint Modeste\";\n          break;\n        case 25: $saint = \"Saint Roméo\";\n          break;\n        case 26: $saint = \"Saint Nestor\";\n          break;\n        case 27: $saint = \"Sainte Honorine\";\n          break;\n        case 28: $saint = \"Saint Romain\";\n          break;\n        case 29: $saint = \"Saint Auguste\";\n          break;\n      }\n    break;\n    case 3:\n      switch($jour)\n      {\n        case 1: $saint  = \"Saint Aubin\";\n    break;\n        case 2: $saint  = \"Saint Charles\";\n    break;\n        case 3: $saint  = \"Saint Guénolé\";\n    break;\n    case 4: $saint  = \"Saint Casimir\";\n    break;\n    case 5: $saint  = \"Sainte Olive\";\n    break;\n    case 6: $saint  = \"Sainte Colette\";\n    break;\n    case 7: $saint  = \"Sainte Félicité\";\n    break;\n    case 8: $saint  = \"Saint Jean de Dieu\";\n    break;\n    case 9: $saint  = \"Sainte Françoise\";\n    break;\n    case 10: $saint  = \"Saint Vivien\";\n    break;\n    case 11: $saint  = \"Sainte Rosine\";\n    break;\n    case 12: $saint  = \"Sainte Justine\";\n    break;\n    case 13: $saint  = \"Saint Rodrigue\";\n    break;\n    case 14: $saint  = \"Sainte Mathilde\";\n    break;\n    case 15: $saint  = \"Sainte Louise\";\n    break;\n    case 16: $saint  = \"Sainte Bénédicte\";\n    break;\n    case 17: $saint  = \"Saint Patrice\";\n    break;\n    case 18: $saint  = \"Saint Cyrille\";\n    break;\n    case 19: $saint  = \"Saint Joseph\";\n    break;\n    case 20: $saint  = \"Saint Herbert\";\n    break;\n    case 21: $saint  = \"Sainte Clémence\";\n    break;\n    case 22: $saint  = \"Sainte Léa\";\n    break;\n    case 23: $saint  = \"Saint Victorien\";\n    break;\n    case 24: $saint  = \"Sainte Catherine de Suède\";\n    break;\n    case 25: $saint  = \"Annonciation\";\n    break;\n    case 26: $saint  = \"Sainte Larissa\";\n    break;\n    case 27: $saint  = \"Saint Habib\";\n    break;\n    case 28: $saint  = \"Saint Gontran\";\n    break;\n    case 29: $saint  = \"Sainte Gwladys\";\n    break;\n    case 30: $saint  = \"Saint Amédée\";\n    break;\n    case 31: $saint  = \"Saint Benjamin\";\n    break;\n    }\n    break;\n    case 4:\n        switch($jour)\n        {\n        \n    case 1: $saint  = \"Saint Hughes\";\n    break;\n    case 2: $saint  = \"Sainte Sandrine\";\n    break;\n    case 3: $saint  = \"Saint Richard\";\n    break;\n    case 4: $saint  = \"Saint Isidore\";\n    break;\n    case 5: $saint  = \"Sainte Irène\";\n    break;\n    case 6: $saint  = \"Saint Marcellin\";\n    break;\n    case 7: $saint  = \"Saint J-B de la Salle\";\n    break;\n    case 8: $saint  = \"Sainte Julie\";\n    break;\n    case 9: $saint  = \"Saint Gautier\";\n    break;\n    case 10: $saint  = \"Saint Fulbert\";\n    break;\n    case 11: $saint  = \"Saint Stanislas\";\n    break;\n    case 12: $saint  = \"Sainte Jules\";\n    break;\n    case 13: $saint  = \"Sainte Ida\";\n    break;\n    case 14: $saint  = \"Saint Maxime\";\n    break;\n    case 15: $saint  = \"Saint Paterne\";\n    break;\n    case 16: $saint  = \"Saint Benoît-Joseph\";\n    break;\n    case 17: $saint  = \"Saint Anicet\";\n    break;\n    case 18: $saint  = \"Saint Parfait\";\n    break;\n    case 19: $saint  = \"Sainte Emma\";\n    break;\n    case 20: $saint  = \"Sainte Odette\";\n    break;\n    case 21: $saint  = \"Saint Anselme\";\n    break;\n    case 22: $saint  = \"Saint Alexandre\";\n    break;\n    case 23: $saint  = \"Saint Georges\";\n    break;\n    case 24: $saint  = \"Saint Fidèle\";\n    break;\n    case 25: $saint  = \"Saint Marc\";\n    break;\n    case 26: $saint  = \"Sainte Alida\";\n    break;\n    case 27: $saint  = \"Sainte Zita\";\n    break;\n    case 28: $saint  = \"Sainte Valérie\";\n    break;\n    case 29: $saint  = \"Sainte Cath. de Sienne\";\n    break;\n    case 30: $saint  = \"Saint Robert\";\n    break;\n    }\n    break;\n    case 5:\n        switch($jour)\n        {\n        \n    case 1: $saint  = \"Fête du Travail\";\n    break;\n    case 2: $saint  = \"Saint Boris\";\n    break;\n    case 3: $saint  = \"Saint Philippe - Jacques\";\n    break;\n    case 4: $saint  = \"Saint Sylvain\";\n    break;\n    case 5: $saint  = \"Sainte Judith\";\n    break;\n    case 6: $saint  = \"Sainte Prudence\";\n    break;\n    case 7: $saint  = \"Sainte Gisèle\";\n    break;\n    case 8: $saint  = \"Armistice 1945\";\n    break;\n    case 9: $saint  = \"Sainte Pacôme\";\n    break;\n    case 10: $saint  = \"Sainte Solange\";\n    break;\n    case 11: $saint  = \"Sainte Estelle\";\n    break;\n    case 12: $saint  = \"Saint Achille\";\n    break;\n    case 13: $saint  = \"Sainte Rolande\";\n    break;\n    case 14: $saint  = \"Saint Matthias\";\n    break;\n    case 15: $saint  = \"Sainte Denise\";\n    break;\n    case 16: $saint  = \"Saint Honoré\";\n    break;\n    case 17: $saint  = \"Saint Pascal\";\n    break;\n    case 18: $saint  = \"Saint Eric\";\n    break;\n    case 19: $saint  = \"Saint Yves\";\n    break;\n    case 20: $saint  = \"Saint Bernardin\";\n    break;\n    case 21: $saint  = \"Saint Constantin\";\n    break;\n    case 22: $saint  = \"Saint Emile\";\n    break;\n    case 23: $saint  = \"Saint Didier\";\n    break;\n    case 24: $saint  = \"Saint Donatien\";\n    break;\n    case 25: $saint  = \"Sainte Sophie\";\n    break;\n    case 26: $saint  = \"Saint Béranger\";\n    break;\n    case 27: $saint  = \"Saint Augustin\";\n    break;\n    case 28: $saint  = \"Saint Germain\";\n    break;\n    case 29: $saint  = \"Saint Aymard\";\n    break;\n    case 30: $saint  = \"Saint Ferdinand\";\n    break;\n    case 31: $saint  = \"Visitation\";\n    break;\n    }\n    break;\n    case 6:\n        switch($jour)\n        {\n    case 1: $saint  = \"Saint Justin\";\n    break;\n    case 2: $saint  = \"Sainte Blandine\";\n    break;\n    case 3: $saint  = \"Saint Kévin\";\n    break;\n    case 4: $saint  = \"Sainte Clotilde\";\n    break;\n    case 5: $saint  = \"Saint Igor\";\n    break;\n    case 6: $saint  = \"Saint Norbert\";\n    break;\n    case 7: $saint  = \"Saint Gilbert\";\n    break;\n    case 8: $saint  = \"Saint Médard\";\n    break;\n    case 9: $saint  = \"Sainte Diane\";\n    break;\n    case 10: $saint  = \"Saint Landry\";\n    break;\n    case 11: $saint  = \"Saint Barnabé\";\n    break;\n    case 12: $saint  = \"Saint Guy\";\n    break;\n    case 13: $saint  = \"Saint Antoine de P.\";\n    break;\n    case 14: $saint  = \"Saint Elisée\";\n    break;\n    case 15: $saint  = \"Sainte Germaine\";\n    break;\n    case 16: $saint  = \"Saint J-F Régis\";\n    break;\n    case 17: $saint  = \"Saint Hervé\";\n    break;\n    case 18: $saint  = \"Saint Léonce\";\n    break;\n    case 19: $saint  = \"Saint Romuald\";\n    break;\n    case 20: $saint  = \"Saint Silvère\";\n    break;\n    case 21: $saint  = \"Eté\";\n    break;\n    case 22: $saint  = \"Saint Alban\";\n    break;\n    case 23: $saint  = \"Sainte Audrey\";\n    break;\n    case 24: $saint  = \"Saint Jean-Baptiste\";\n    break;\n    case 25: $saint  = \"Saint Prosper\";\n    break;\n    case 26: $saint  = \"Saint Anthelme\";\n    break;\n    case 27: $saint  = \"Saint Fernand\";\n    break;\n    case 28: $saint  = \"Saint Irénée\";\n    break;\n    case 29: $saint  = \"Saint Pierre - Paul\";\n    break;\n    case 30: $saint  = \"Saint Martial\";\n    break;\n    }\n    break;\n    case 7:\n        switch($jour)\n        {\n    case 1: $saint  = \"Saint Thierry\";\n    break;\n    case 2: $saint  = \"Saint Martinien\";\n    break;\n    case 3: $saint  = \"Saint Thomas\";\n    break;\n    case 4: $saint  = \"Saint Florent\";\n    break;\n    case 5: $saint  = \"Saint Antoine-Marie\";\n    break;\n    case 6: $saint  = \"Sainte Mariette\";\n    break;\n    case 7: $saint  = \"Saint Raoul\";\n    break;\n    case 8: $saint  = \"Saint Thibaut\";\n    break;\n    case 9: $saint  = \"Sainte Amandine\";\n    break;\n    case 10: $saint  = \"Saint Ulrich\";\n    break;\n    case 11: $saint  = \"Saint Benoît\";\n    break;\n    case 12: $saint  = \"Saint Olivier\";\n    break;\n    case 13: $saint  = \"Saint Henri - Joël\";\n    break;\n    case 14: $saint  = \"Fête Nationale\";\n    break;\n    case 15: $saint  = \"Saint Donald\";\n    break;\n    case 16: $saint  = \"N-D du Mt-Carmel\";\n    break;\n    case 17: $saint  = \"Sainte Charlotte\";\n    break;\n    case 18: $saint  = \"Saint Frédéric\";\n    break;\n    case 19: $saint  = \"Saint Arsène\";\n    break;\n    case 20: $saint  = \"Sainte Marina\";\n    break;\n    case 21: $saint  = \"Saint Victor\";\n    break;\n    case 22: $saint  = \"Sainte Marie-Madeleine\";\n    break;\n    case 23: $saint  = \"Sainte Brigitte\";\n    break;\n    case 24: $saint  = \"Sainte Christine\";\n    break;\n    case 25: $saint  = \"Saint Jacques\";\n    break;\n    case 26: $saint  = \"Sainte Anne - Joachim\";\n    break;\n    case 27: $saint  = \"Sainte Nathalie\";\n    break;\n    case 28: $saint  = \"Saint Samson\";\n    break;\n    case 29: $saint  = \"Sainte Marthe\";\n    break;\n    case 30: $saint  = \"Sainte Juliette\";\n    break;\n    case 31: $saint  = \"Saint Ignace de Loyola\";\n    break;\n    }\n    break;\n    case 8:\n        switch($jour)\n        {\n    case 1: $saint = \"Saint Alphonse\";\n    break;\n    case 2: $saint = \"Saint Julien Eymard\";\n    break;\n    case 3: $saint = \"Sainte Lydie\";\n    break;\n    case 4: $saint = \"Saint J-M Vianney\";\n    break;\n    case 5: $saint = \"Saint Abel\";\n    break;\n    case 6: $saint = \"Transfiguration\";\n    break;\n    case 7: $saint = \"Saint Gaëtan\";\n    break;\n    case 8: $saint = \"Saint Dominique\";\n    break;\n    case 9: $saint = \"Saint Amour\";\n    break;\n    case 10: $saint = \"Saint Laurent\";\n    break;\n    case 11: $saint = \"Sainte Claire\";\n    break;\n    case 12: $saint = \"Sainte Clarisse\";\n    break;\n    case 13: $saint = \"Saint Hippolyte\";\n    break;\n    case 14: $saint = \"Saint Evrard\";\n    break;\n    case 15: $saint = \"Assomption\";\n    break;\n    case 16: $saint = \"Saint Armel\";\n    break;\n    case 17: $saint = \"Saint Hyacinthe\";\n    break;\n    case 18: $saint = \"Sainte Hélène\";\n    break;\n    case 19: $saint = \"Saint Jean Eudes\";\n    break;\n    case 20: $saint = \"Saint Bernard\";\n    break;\n    case 21: $saint = \"Saint Christophe\";\n    break;\n    case 22: $saint = \"Saint Fabrice\";\n    break;\n    case 23: $saint = \"Sainte Rose de Lima\";\n    break;\n    case 24: $saint = \"Saint Barthélémy\";\n    break;\n    case 25: $saint = \"Saint Louis\";\n    break;\n    case 26: $saint = \"Sainte Natacha\";\n    break;\n    case 27: $saint = \"Sainte Monique\";\n    break;\n    case 28: $saint = \"Saint Augustin\";\n    break;\n    case 29: $saint = \"Sainte Sabine\";\n    break;\n    case 30: $saint = \"Saint Fiacre\";\n    break;\n    case 31: $saint = \"Saint Aristide\";\n    break;\n    }\n    break;\n    case 9:\n        switch($jour)\n        {\n    case 1: $saint  = \"Saint Gilles\";\n    break;\n    case 2: $saint  = \"Sainte Ingrid\";\n    break;\n    case 3: $saint  = \"Saint Grégoire\";\n    break;\n    case 4: $saint  = \"Sainte Rosalie\";\n    break;\n    case 5: $saint  = \"Sainte Raïssa\";\n    break;\n    case 6: $saint  = \"Saint Bertrand\";\n    break;\n    case 7: $saint  = \"Sainte Reine\";\n    break;\n    case 8: $saint  = \"Nativité de N-D\";\n    break;\n    case 9: $saint  = \"Saint Alain\";\n    break;\n    case 10: $saint  = \"Sainte Inès\";\n    break;\n    case 11: $saint  = \"Saint Adolphe\";\n    break;\n    case 12: $saint  = \"Saint Apollinaire\";\n    break;\n    case 13: $saint  = \"Saint Aimé\";\n    break;\n    case 14: $saint  = \"La Sainte-Croix\";\n    break;\n    case 15: $saint  = \"Saint Roland\";\n    break;\n    case 16: $saint  = \"Sainte Edith\";\n    break;\n    case 17: $saint  = \"Saint Renaud\";\n    break;\n    case 18: $saint  = \"Sainte Nadège\";\n    break;\n    case 19: $saint  = \"Sainte Emilie\";\n    break;\n    case 20: $saint  = \"Saint Davy\";\n    break;\n    case 21: $saint  = \"Saint Matthieu\";\n    break;\n    case 22: $saint  = \"Saint Maurice\";\n    break;\n    case 23: $saint  = \"Saint Constant\";\n    break;\n    case 24: $saint  = \"Saint Thècle\";\n    break;\n    case 25: $saint  = \"Saint Hermann\";\n    break;\n    case 26: $saint  = \"Saint Côme - Damien\";\n    break;\n    case 27: $saint  = \"Saint Vincent de Paul\";\n    break;\n    case 28: $saint  = \"Saint Venceslas\";\n    break;\n    case 29: $saint  = \"Saint Michel\";\n    break;\n    case 30: $saint  = \"Saint Jérôme\";\n    break;\n    }\n    break;\n    case 10:\n        switch($jour)\n        {\n    case 1: $saint  = \"Sainte Thérèse de l'E-J\";\n    break;\n    case 2: $saint  = \"Saint Léger\";\n    break;\n    case 3: $saint  = \"Saint Gérard\";\n    break;\n    case 4: $saint  = \"Saint François d'Assise\";\n    break;\n    case 5: $saint  = \"Sainte Fleur\";\n    break;\n    case 6: $saint  = \"Saint Bruno\";\n    break;\n    case 7: $saint  = \"Saint Serge\";\n    break;\n    case 8: $saint  = \"Sainte Pélagie\";\n    break;\n    case 9: $saint  = \"Saint Denis\";\n    break;\n    case 10: $saint  = \"Saint Ghislain\";\n    break;\n    case 11: $saint  = \"Saint Firmin\";\n    break;\n    case 12: $saint  = \"Saint Wilfrid\";\n    break;\n    case 13: $saint  = \"Saint Géraud\";\n    break;\n    case 14: $saint  = \"Saint Juste\";\n    break;\n    case 15: $saint  = \"Sainte Thérèse d'Avila\";\n    break;\n    case 16: $saint  = \"Sainte Edwige\";\n    break;\n    case 17: $saint  = \"Saint Baudouin\";\n    break;\n    case 18: $saint  = \"Saint Luc\";\n    break;\n    case 19: $saint  = \"Saint René\";\n    break;\n    case 20: $saint  = \"Sainte Adeline\";\n    break;\n    case 21: $saint  = \"Sainte Céline\";\n    break;\n    case 22: $saint  = \"Sainte Elodie\";\n    break;\n    case 23: $saint  = \"Saint Jean de Capistran\";\n    break;\n    case 24: $saint  = \"Saint Florentin\";\n    break;\n    case 25: $saint  = \"Saint Crépin\";\n    break;\n    case 26: $saint  = \"Saint Dimitri\";\n    break;\n    case 27: $saint  = \"Sainte Emeline\";\n    break;\n    case 28: $saint  = \"Saint Simon - Juda\";\n    break;\n    case 29: $saint  = \"Saint Narcisse\";\n    break;\n    case 30: $saint  = \"Saint Bienvenu\";\n    break;\n    case 31: $saint  = \"Saint Quentin\";\n    break;\n    }\n    break;\n    case 11:\n        switch($jour)\n        {\n    case 1: $saint    = \"Toussaint\";\n    break;\n    case 2: $saint    = \"Défunts\";\n    break;\n    case 3: $saint    = \"Saint Hubert\";\n    break;\n    case 4: $saint    = \"Saint Charles\";\n    break;\n    case 5: $saint    = \"Sainte Sylvie\";\n    break;\n    case 6: $saint    = \"Sainte Bertille\";\n    break;\n    case 7: $saint    = \"Sainte Carine\";\n    break;\n    case 8: $saint    = \"Saint Geoffroy\";\n    break;\n    case 9: $saint    = \"Saint Théodore\";\n    break;\n    case 10: $saint    = \"Saint Léon\";\n    break;\n    case 11: $saint    = \"Saint Martin\";\n    break;\n    case 12: $saint    = \"Saint Christian\";\n    break;\n    case 13: $saint    = \"Saint Brice\";\n    break;\n    case 14: $saint    = \"Saint Sidoine\";\n    break;\n    case 15: $saint    = \"Saint Albert\";\n    break;\n    case 16: $saint    = \"Sainte Marguerite\";\n    break;\n    case 17: $saint    = \"Sainte Elisabeth\";\n    break;\n    case 18: $saint    = \"Sainte Aude\";\n    break;\n    case 19: $saint    = \"Saint Tanguy\";\n    break;\n    case 20: $saint    = \"Saint Edmond\";\n    break;\n    case 21: $saint    = \"Prés. de Marie\";\n    break;\n    case 22: $saint    = \"Sainte Cécile\";\n    break;\n    case 23: $saint    = \"Saint Clément\";\n    break;\n    case 24: $saint    = \"Sainte Flora\";\n    break;\n    case 25: $saint    = \"Sainte Catherine\";\n    break;\n    case 26: $saint    = \"Sainte Delphine\";\n    break;\n    case 27: $saint    = \"Saint Séverin\";\n    break;\n    case 28: $saint    = \"Saint Jacques de la Marche\";\n    break;\n    case 29: $saint    = \"Saint Saturnin\";\n    break;\n    case 30: $saint    = \"Saint André\";\n    break;\n    }\n    break;\n    case 12:\n        switch($jour)\n        {\n    case 1: $saint  = \"Sainte Florence\";\n    break;\n    case 2: $saint  = \"Sainte Viviane\";\n    break;\n    case 3: $saint  = \"Saint Xavier\";\n    break;\n    case 4: $saint  = \"Sainte Barbara\";\n    break;\n    case 5: $saint  = \"Saint Gérald\";\n    break;\n    case 6: $saint  = \"Saint Nicolas\";\n    break;\n    case 7: $saint  = \"Saint Ambroise\";\n    break;\n    case 8: $saint  = \"Imm. Conception\";\n    break;\n    case 9: $saint  = \"Saint P. Fourier\";\n    break;\n    case 10: $saint  = \"Saint Romaric\";\n    break;\n    case 11: $saint  = \"Saint Daniel\";\n    break;\n    case 12: $saint  = \"Sainte Jeanne F.-C.\";\n    break;\n    case 13: $saint  = \"Sainte Lucie\";\n    break;\n    case 14: $saint  = \"Sainte Odile\";\n    break;\n    case 15: $saint  = \"Sainte Ninon\";\n    break;\n    case 16: $saint  = \"Sainte Alice\";\n    break;\n    case 17: $saint  = \"Saint Gaël\";\n    break;\n    case 18: $saint  = \"Saint Gatien\";\n    break;\n    case 19: $saint  = \"Saint Urbain\";\n    break;\n    case 20: $saint  = \"Saint Abraham\";\n    break;\n    case 21: $saint  = \"Saint P. Cenisius\";\n    break;\n    case 22: $saint  = \"Sainte Françoise-Xavière\";\n    break;\n    case 23: $saint  = \"Saint Armand\";\n    break;\n    case 24: $saint  = \"Saint Adèle\";\n    break;\n    case 25: $saint  = \"Noël\";\n    break;\n    case 26: $saint  = \"Saint Etienne\";\n    break;\n    case 27: $saint  = \"Saint Jean\";\n    break;\n    case 28: $saint  = \"Saint Innocents\";\n    break;\n    case 29: $saint  = \"Saint David\";\n    break;\n    case 30: $saint  = \"Saint Roger\";\n    break;\n    case 31: $saint  = \"Saint Sylvestre\";\n    break;\n        }\n      break;\n  }\n  return $saint;\n}\n\n$saintDuJour = saint(date('d', strtotime($date)),date('m', strtotime($date)));\n$jourDemain = date(\"d\", strtotime($date.'+ 1 days'));\n$moisDemain = date(\"m\", strtotime($date.'+ 1 days'));\n$saintDemain  = saint($jourDemain,$moisDemain);\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ LOG \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$scenario->setLog('| tag(saintJour) - [Autre] : '.$saintDuJour);\n$scenario->setLog('| tag(saintDemain) - [Autre] : '.$saintDemain);\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ TAG \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$tags['#saintJour#'] = $saintDuJour;\n$tags['#saintDemain#'] = $saintDemain;\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ WIDGET \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$tags['#json#']['Saints'] = array (\n  \"saintJour\" => $saintDuJour,\n  \"saintDemain\" => $saintDemain\n);\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$scenario->setTags($tags);\n$scenario->setLog('└────────────────────────────');",
                                                "options": [],
                                                "order": "0"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "element",
                            "subtype": "",
                            "expression": "2023",
                            "options": [],
                            "order": "2",
                            "element": {
                                "name": "",
                                "type": "code",
                                "options": [],
                                "order": "0",
                                "subElements": [
                                    {
                                        "name": "",
                                        "type": "code",
                                        "subtype": "action",
                                        "options": {
                                            "collapse": "1",
                                            "enable": "1"
                                        },
                                        "order": "0",
                                        "expressions": [
                                            {
                                                "type": "code",
                                                "subtype": "",
                                                "expression": "\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ JOUR \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$scenario->setLog('┌─────────────────── JOUR');\n$tags = $scenario->getTags(); \/\/récupère la liste des tags\n$date = date(\"Y-m-d\");\n\/\/$date = date(\"Y-05-08\"); \/\/ for test\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ Date du jour \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$dateDuJour = date(\"d\/m\/Y\",strtotime($date));\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ Numero de jour de l'année \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$daynumber = date('z',strtotime($date)) + 1;\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ Week-end \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\nif(date(\"l\",strtotime($date)) == 'Saturday' || date(\"l\",strtotime($date)) == 'Sunday') $weekend = 1; \/\/ Week-end\nelse $weekend = 0;\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ Jours fériés \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$ferie = 0;\n$libelle_ferie =\"\";\n$dateProchainFerie=\"\";\n$libelleProchainFerie=\"\";\n$diffFerie = \"\";\n$dimanche_paques = date(\"Y-m-d\", easter_date(date(\"Y\")));\/\/\n$holidays[\"Jour de l'an\"] = date(\"Y\").\"-01-01\";\n$holidays[\"Lundi de Paques\"] = date(\"Y-m-d\", strtotime(\"$dimanche_paques +1 day\"));\n$holidays[\"Ascension\"] = date(\"Y-m-d\", strtotime(\"$dimanche_paques +39 day\"));\n$holidays[\"Lundi Pentecote\"] = date(\"Y-m-d\", strtotime(\"$dimanche_paques +50 day\"));\n$holidays[\"Fête du travail\"] = date(\"Y\").\"-05-01\";\n$holidays[\"Victoire des alliés 1945\"] = date(\"Y\").\"-05-08\";\n$holidays[\"Assomption\"] = date(\"Y\").\"-08-15\";\n$holidays[\"Fête nationale\"] = date(\"Y\").\"-07-14\";\n$holidays[\"Armistice 1918\"] = date(\"Y\").\"-11-11\";\n$holidays[\"Toussaint\"] = date(\"Y\").\"-11-01\";\n$holidays[\"Noël\"] = date(\"Y\").\"-12-25\";\n$count = count($holidays);\nasort($holidays);\n$i=1;\nforeach($holidays as $key => $holiday_timestamp) {\n  if ($holiday_timestamp == $date) {\n    $ferie = 1; $libelle_ferie = $key;\n  }\n  if ($i == $count) { \/\/ si dernier ferié\n    if ($date < $holiday_timestamp)\n    {\n      $dateProchainFerie = $holiday_timestamp;\n      $libelleProchainFerie = $key;\n      break;\n    }\n    else\n    {\n      $d= date(\"Y\")+1;\n      $dateProchainFerie = $d.'-01-01';\n      $libelleProchainFerie = \"Jour de l'an\";\n      break;\n    }   \n  }\n  else\n  {\n    if ($date < $holiday_timestamp)\n    {\n      $dateProchainFerie = $holiday_timestamp;\n      $libelleProchainFerie = $key;\n      break; \n    }   \n  }\n  $i++;\n}\n$date1 = new DateTime($dateProchainFerie);\n$date2 = new DateTime($date);\n$diffFerie = $date1->diff($date2)->format(\"%a\");\n$dateProchainFerieScenario = date(\"Y-m-d\",strtotime(str_replace('\/','-',$dateProchainFerie)));\n$dateProchainFerie = date(\"d\/m\/Y\",strtotime(str_replace('\/','-',$dateProchainFerie)));\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ Saisons \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$date_year = date(\"Y\", strtotime($date));  \nif (strtotime($date)<strtotime($date_year.'-03-21') || strtotime($date)>=strtotime($date_year.'-12-21')) $saison = \"Hiver\";\nelseif (strtotime($date)>=strtotime($date_year.'-09-23')) $saison = \"Automne\";\nelseif (strtotime($date)>=strtotime($date_year.'-06-21')) $saison = \"Eté\";\nelseif (strtotime($date)>=strtotime($date_year.'-03-21')) $saison = \"Printemps\";\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ LOG \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$scenario->setLog('| tag(dateDuJour) - [Autre] : '.$date);\n$scenario->setLog('| tag(dayNumber) - [Numérique] : '.$daynumber);\n$scenario->setLog('| tag(weekend) - [Binaire] : '.$weekend);\n$scenario->setLog('| tag(ferie) - [Binaire] : '.$ferie);\n$scenario->setLog('| tag(libelleFerie) - [Autre] : '.$libelle_ferie);\n$scenario->setLog('| tag(dateProchainFerie) - [Autre] : '.$dateProchainFerieScenario);\n$scenario->setLog('| tag(libelleProchainFerie) - [Autre] : '.$libelleProchainFerie);\n$scenario->setLog('| tag(nbProchainFerie) - [Numérique] : '.$diffFerie);\n$scenario->setLog('| tag(saison) - [Autre] : '.$saison);\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ TAG \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$tags['#dateDuJour#'] = '\"'.$date.'\"';\n$tags['#dayNumber#'] = $daynumber;\n$tags['#weekend#'] = $weekend;\n$tags['#ferie#'] = $ferie;\n$tags['#libelleFerie#'] = $libelle_ferie;\n$tags['#dateProchainFerie#'] = '\"'.$dateProchainFerieScenario.'\"';\n$tags['#libelleProchainFerie#'] = $libelleProchainFerie;\n$tags['#nbProchainFerie#'] = $diffFerie;\n$tags['#saison#'] = $saison;\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ WIDGET \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$tags['#json#']['Jour'] = array (\n  \"dateJour\" => $dateDuJour,\n  \"weekend\" => $weekend,\n  \"ferie\" => $ferie,\n  \"libelleFerie\" => $libelle_ferie,\n  \"dateProchainFerie\" => $dateProchainFerie,\n  \"libelleProchainFerie\" => $libelleProchainFerie,\n  \"nbProchainFerie\" => $diffFerie,\n  \"saison\" => $saison\n);\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$scenario->setTags($tags);\n$scenario->setLog('└────────────────────────────');",
                                                "options": [],
                                                "order": "0"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "element",
                            "subtype": "",
                            "expression": "2024",
                            "options": [],
                            "order": "3",
                            "element": {
                                "name": "",
                                "type": "code",
                                "options": [],
                                "order": "0",
                                "subElements": [
                                    {
                                        "name": "",
                                        "type": "code",
                                        "subtype": "action",
                                        "options": {
                                            "collapse": "1",
                                            "enable": "1"
                                        },
                                        "order": "0",
                                        "expressions": [
                                            {
                                                "type": "code",
                                                "subtype": "",
                                                "expression": "\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ SOLEIL \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$scenario->setLog('┌─────────────────── SOLEIL');\n$tags = $scenario->getTags(); \/\/récupère la liste des tags\n$lat = config::byKey('info::latitude');\n$long = config::byKey('info::longitude');\n$date = time();\n\/\/$date = strtotime(date(\"2023-04-09 20:40:00\")); \/\/for test\n\nfunction getSunPosition($UnixTimestamp, $lat, $long)\n{\n  \/\/ fonction récuperé sur https:\/\/github.com\/KiboOst\/php-sunPos\/blob\/master\/phpSunPos.php et modifier pour ce scénario\n  $year = date(\"Y\",$UnixTimestamp);\n  $month = date(\"n\",$UnixTimestamp);\n  $day = date(\"j\",$UnixTimestamp);\n  $hour = gmdate(\"H\",$UnixTimestamp);\n  $min = gmdate(\"i\",$UnixTimestamp);\n  \/\/ From: http:\/\/stackoverflow.com\/questions\/8708048\/position-of-the-sun-given-time-of-day-latitude-and-longitude?rq=1\n  \/\/ online check: https:\/\/www.esrl.noaa.gov\/gmd\/grad\/solcalc\/\n  \/\/ Get Julian date for date at noon\n  $jd = gregoriantojd($month,$day,$year);\n  \/\/correct for half-day offset\n  $dayfrac = $hour \/ 24 - .5;\n  \/\/now set the fraction of a day\n  $frac = $dayfrac + $min \/ 60 \/ 24;\n  $jd = $jd + $frac;\n  \/\/ The input to the Atronomer's almanach is the difference between\n  \/\/ the Julian date and JD 2451545.0 (noon, 1 January 2000)\n  $time = ($jd - 2451545);\n  \/\/ Ecliptic coordinates\n  \/\/ Mean longitude\n  $mnlong = (280.460 + 0.9856474 * $time);\n  $mnlong = fmod($mnlong,360);\n  if ($mnlong < 0) $mnlong = ($mnlong + 360);\n  \/\/ Mean anomaly\n  $mnanom = (357.528 + 0.9856003 * $time);\n  $mnanom = fmod($mnanom,360);\n  if ($mnanom < 0) $mnanom = ($mnanom + 360);\n  $mnanom = deg2rad($mnanom);\n  \/\/ Ecliptic longitude and obliquity of ecliptic\n  $eclong = ($mnlong + 1.915 * sin($mnanom) + 0.020 * sin(2 * $mnanom));\n  $eclong = fmod($eclong,360);\n  $oblqec = (23.439 - 0.0000004 * $time);\n  $eclong = deg2rad($eclong);\n  $oblqec = deg2rad($oblqec);\n  \/\/ Celestial coordinates\n  \/\/ Right ascension and declination\n  $num = (cos($oblqec) * sin($eclong));\n  $den = (cos($eclong));\n  $ra = (atan($num \/ $den));\n  if ($den < 0) $ra = ($ra + pi());\n  if ($den >= 0 && $num <0) $ra = ($ra + 2*pi());\n  $dec = (asin(sin($oblqec) * sin($eclong)));\n  \/\/ Local coordinates\n  \/\/ Greenwich mean sidereal time\n  \/\/$h = $hour + $min \/ 60 + $sec \/ 3600;\n  $h = $hour + $min \/ 60;\n  $gmst = (6.697375 + .0657098242 * $time + $h);\n  $gmst = fmod($gmst,24);\n  if ($gmst < 0) $gmst = ($gmst + 24);\n  \/\/ Local mean sidereal time\n  $lmst = ($gmst + $long \/ 15);\n  $lmst = fmod($lmst,24);\n  if ($lmst < 0) $lmst = ($lmst + 24);\n  $lmst = deg2rad($lmst * 15);\n  \/\/ Hour angle\n  $ha = ($lmst - $ra);\n  if ($ha < pi()) $ha = ($ha + 2*pi());\n  if ($ha > pi()) $ha = ($ha - 2*pi());\n  \/\/ Latitude to radians\n  $lat = deg2rad($lat);\n  \/\/ Azimuth and elevation\n  $el = (asin(sin($dec) * sin($lat) + cos($dec) * cos($lat) * cos($ha)));\n  $az = (asin(-cos($dec) * sin($ha) \/ cos($el)));\n  \/\/ For logic and names, see Spencer, J.W. 1989. Solar Energy. 42(4):353\n  if ((sin($dec) - sin($el) * sin($lat)) >00) {\n    if(sin($az) < 0) $az = ($az + 2*pi());\n  } else {\n    $az = (pi() - $az);\n  }\n  $el = rad2deg($el);\n  $az = rad2deg($az);\n  $lat = rad2deg($lat);\n  return array(number_format($el, 2), number_format($az, 2));\n}\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ Lever & Coucher \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$sun_info = date_sun_info($date, $lat, $long);\n$sunrise = date(\"H:i\", $sun_info[\"sunrise\"]);\n$zenith = date(\"H:i\", $sun_info[\"transit\"]);\n$sunset = date(\"H:i\", $sun_info[\"sunset\"]);\n\n$aubeCivil = date(\"Hi\", $sun_info[\"civil_twilight_begin\"]);\n$crepusculeCivil = date(\"Hi\", $sun_info[\"civil_twilight_end\"]);\n$aubeNautique = date(\"Hi\", $sun_info[\"nautical_twilight_begin\"]);\n$crepusculeNautique = date(\"Hi\", $sun_info[\"nautical_twilight_end\"]);\n$aubeAstronomique = date(\"Hi\", $sun_info[\"astronomical_twilight_begin\"]);\n$crepusculeAstronomique = date(\"Hi\", $sun_info[\"astronomical_twilight_end\"]);\n\n$sunriseWidget = date(\"H\\hi\", $sun_info[\"sunrise\"]);\n$zenithWidget = date(\"H\\hi\", $sun_info[\"transit\"]);\n$sunsetWidget = date(\"H\\hi\", $sun_info[\"sunset\"]);\n$sunriseScenario = date(\"Hi\", $sun_info[\"sunrise\"]);\n$zenithScenario = date(\"Hi\", $sun_info[\"transit\"]);\n$sunsetScenario = date(\"Hi\", $sun_info[\"sunset\"]);\n\n$sunrise_minutes = (date(\"H\", $sun_info[\"sunrise\"])*60)+date(\"i\", $sun_info[\"sunrise\"]);\n$sunset_minutes = (date(\"H\", $sun_info[\"sunset\"])*60)+date(\"i\", $sun_info[\"sunset\"]);\n$now_minutes = (date(\"H\", $date)*60)+date(\"i\", $date);\n\n$diff1 =  $sunset_minutes - $sunrise_minutes; \/\/mn entre leve et coucher\n$diff2 = $now_minutes - $sunrise_minutes;\nif ($diff2 < 0 || $diff2 > $sunset_minutes) $diff2 = 0;\n$poucent_sun = ($diff2*100)\/$diff1;\n$positionHorizontalSun = ($poucent_sun\/100*225)+5; \/\/ longueur div = 225, padding = 5\n$positionHorizontalSun = ($positionHorizontalSun > 230) ? 230 : $positionHorizontalSun;\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ Durée du jour \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$sunriseSecond = strtotime(date(\"Y-m-d H:i:s\", $sun_info[\"sunrise\"]));\n$sunsetSecond = strtotime(date(\"Y-m-d H:i:s\", $sun_info[\"sunset\"]));\n$interval = $sunsetSecond - $sunriseSecond;\n$seconds = $interval % 60;\n$minutes = floor(($interval % 3600) \/ 60);\n$hours = floor($interval \/ 3600);\n$hours = ($hours < 10) ? '0'.$hours : $hours;\n$minutes = ($minutes < 10) ? '0'.$minutes : $minutes;\n$seconds = ($seconds < 10) ? '0'.$seconds : $seconds;\n$dureeJour = $hours.\":\".$minutes.\":\".$seconds;\n\/\/ Ecart depuis hier\n$sun_info_hier = date_sun_info(($date - 86400), $lat, $long);\n$sunriseSecond_hier = strtotime(date(\"Y-m-d H:i:s\", $sun_info_hier[\"sunrise\"]));\n$sunsetSecond_hier = strtotime(date(\"Y-m-d H:i:s\", $sun_info_hier[\"sunset\"]));\n$interval_hier = $sunsetSecond_hier - $sunriseSecond_hier; \n$ecartJour = $interval - $interval_hier; \/\/ pour tag\n$ecartWidget = $ecartJour;\n$ecartWidgetSeconds = $ecartWidget % 60;\n$ecartWidgetMinutes = floor((abs($ecartWidget) % 3600) \/ 60);\nif ($ecartWidget > 0) $ecartWidget = \"+ \".$ecartWidgetMinutes.\"min \".$ecartWidgetSeconds.\"s\"; \/\/ Ecart\nelse $ecartWidget = \"- \".abs($ecartWidgetMinutes).\"min \".abs($ecartWidgetSeconds).\"s\";\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ Mode Jour \/ nuit \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\nif(date(\"H:i\", $date) >= $sunrise && date(\"H:i\", $date) < $sunset){\n  $modeJour = \"Jour\"; \/\/ Jour ou Nuit\n  $modeJourBinaire = 1; \/\/ Jour Binaire \n}\nelse {\n  $modeJour = \"Nuit\";\n  $modeJourBinaire = 0; \/\/ Nuit Binaire \n}\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ Position Soleil \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$Sun = getSunPosition($date,$lat,$long);\n$Sun2 = getSunPosition(strtotime( date(\"Y\", $date).\"-\".date(\"m\", $date).\"-\".date(\"d\", $date).\"T\".$zenith.\":00\" ),$lat,$long);\n$positionVerticalSun = ($Sun[0]*55\/$Sun2[0])-15;\n$positionVerticalSun = ($positionVerticalSun < -15) ? -15 : $positionVerticalSun;\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ LOG \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$scenario->setLog('| tag(leverSoleilScenario) - [Numérique] : ' . $sunriseScenario);\n$scenario->setLog('| tag(zenithSoleilScenario) - [Numérique] : ' . $zenithScenario);\n$scenario->setLog('| tag(coucherSoleilScenario) - [Numérique] : ' . $sunsetScenario);\n$scenario->setLog('| tag(aubeCivil) - [Numérique] : ' . $aubeCivil);\n$scenario->setLog('| tag(crepusculeCivil) - [Numérique] : ' . $crepusculeCivil);\n$scenario->setLog('| tag(aubeNautique) - [Numérique] : ' . $aubeNautique);\n$scenario->setLog('| tag(crepusculeNautique) - [Numérique] : ' . $crepusculeNautique);\n$scenario->setLog('| tag(aubeAstronomique) - [Numérique] : ' . $aubeAstronomique);\n$scenario->setLog('| tag(crepusculeAstronomique) - [Numérique] : ' . $crepusculeAstronomique);\n$scenario->setLog('| tag(elevation) - [Numérique] : ' . $Sun[0]);\n$scenario->setLog('| tag(elevationZenith) - [Numérique] : ' . $Sun2[0]);\n$scenario->setLog('| tag(dureeJour) - [Autre] : ' . $dureeJour);\n$scenario->setLog('| tag(dureeJourSeconde) - [Numérique] : ' . $interval);\n$scenario->setLog('| tag(dureeJourEcart) - [Autre] : ' . $ecartJour);\n$scenario->setLog('| tag(modeJourBinaire) - [Binaire] : ' . $modeJourBinaire);\n$scenario->setLog('| tag(modeJour) - [Autre] : '.$modeJour);\nif ($tags['#debug#'] == 1) {\n  $scenario->setLog('| ┌─────────────────── Logs for widget ───────────────────');\n  $scenario->setLog('| | Lever : '.$sunrise);\n  $scenario->setLog('| | zenith : '.$zenith);\n  $scenario->setLog('| | Coucher : '.$sunset);\n  $scenario->setLog('| | Position H widget : '.$positionHorizontalSun.'px');\n  $scenario->setLog('| | Position V widget : '.$positionVerticalSun.'px');\n  $scenario->setLog('| | Mode : '.$modeJour);\n  $scenario->setLog('| └───────────────────────────');\n}\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ TAG \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$tags['#leverSoleilScenario#'] = $sunriseScenario;\n$tags['#zenithSoleilScenario#'] = $zenithScenario;\n$tags['#coucherSoleilScenario#'] = $sunsetScenario;\n$tags['#aubeCivil#'] = $aubeCivil;\n$tags['#crepusculeCivil#'] = $crepusculeCivil;\n$tags['#aubeNautique#'] = $aubeNautique;\n$tags['#crepusculeNautique#'] = $crepusculeNautique;\n$tags['#aubeAstronomique#'] = $aubeAstronomique;\n$tags['#crepusculeAstronomique#'] = $crepusculeAstronomique;\n$tags['#elevation#'] = $Sun[0];\n$tags['#elevationZenith#'] = $Sun2[0];\n$tags['#dureeJour#'] = $dureeJour;\n$tags['#dureeJourEcart#'] = $ecartJour;\n$tags['#dureeJourSeconde#'] = $interval;\n$tags['#modeJourBinaire#'] = $modeJourBinaire;\n$tags['#modeJour#'] = $modeJour;\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ WIDGET \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$tags['#json#']['Soleil'] = array (\n  \"elevation\" => $Sun[0],\n  \"elevationZenith\" => $Sun2[0],\n  \"leverSoleil\" => $sunriseWidget,\n  \"zenithSoleil\" => $zenithWidget,\n  \"coucherSoleil\" => $sunsetWidget,\n  \"positionHorizontalSun\" => $positionHorizontalSun,\n  \"positionVerticalSun\" => $positionVerticalSun,\n  \"dureeJour\" => $dureeJour,\n  \"dureeJourEcart\" => $ecartWidget,\n  \"modeJour\" => $modeJour\n);\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$scenario->setTags($tags);\n$scenario->setLog('└───────────────────────────');",
                                                "options": [],
                                                "order": "0"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "element",
                            "subtype": "",
                            "expression": "2025",
                            "options": [],
                            "order": "4",
                            "element": {
                                "name": "",
                                "type": "code",
                                "options": [],
                                "order": "0",
                                "subElements": [
                                    {
                                        "name": "",
                                        "type": "code",
                                        "subtype": "action",
                                        "options": {
                                            "collapse": "1",
                                            "enable": "1"
                                        },
                                        "order": "0",
                                        "expressions": [
                                            {
                                                "type": "code",
                                                "subtype": "",
                                                "expression": "\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ LUNE \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$scenario->setLog('┌─────────────────── LUNE');\n$tags = $scenario->getTags(); \/\/récupère la liste des tags\n\nsetlocale(LC_TIME, 'fr','fr_FR','fr_FR@euro','fr_FR.utf8','fr-FR','fra');\n$time = time();\n\/\/$time = strtotime('05-05-2023 12:00:00'); \/\/ for test\n\/\/ini_set(\"precision\", \"20\");\t\/\/Defini la precision des calcules\n\nclass MoonPhase {\n  \/**\n  * Moon phase calculation class\n  * Adapted for PHP from Moontool for Windows (http:\/\/www.fourmilab.ch\/moontoolw\/)\n  * by Samir Shah (http:\/\/rayofsolaris.net)\n  * License: MIT\n  **\/\n  private $timestamp;\n  private $phase;\n  private $illum;\n  private $age;\n  private $dist;\n  private $angdia;\n  private $sundist;\n  private $sunangdia;\n  private $synmonth;\n  private $quarters = null;\n  private $offset;\n  \n  function __construct( $pdate = null ) {\n    if( is_null( $pdate ) ) $pdate = time();\n    \/*  Astronomical constants  *\/\n    $epoch = 2444238.5;\t\t\t\/\/ 1980 January 0.0\n    \n    \/*  Constants defining the Sun's apparent orbit  *\/\n    $elonge = 278.833540;\t\t\/\/ Ecliptic longitude of the Sun at epoch 1980.0\n    $elongp = 282.596403;\t\t\/\/ Ecliptic longitude of the Sun at perigee\n    $eccent = 0.016718;\t\t\t\/\/ Eccentricity of Earth's orbit\n    $sunsmax = 1.495985e8;\t\t\/\/ Semi-major axis of Earth's orbit, km\n    $sunangsiz = 0.533128;\t\t\/\/ Sun's angular size, degrees, at semi-major axis distance\n    \n    \/*  Elements of the Moon's orbit, epoch 1980.0  *\/\n    $mmlong = 64.975464;\t\t\/\/ Moon's mean longitude at the epoch\n    $mmlongp = 349.383063;\t\t\/\/ Mean longitude of the perigee at the epoch\n    $mlnode = 151.950429;\t\t\/\/ Mean longitude of the node at the epoch\n    $minc = 5.145396;\t\t\t\/\/ Inclination of the Moon's orbit\n    $mecc = 0.054900;\t\t\t\/\/ Eccentricity of the Moon's orbit\n    $mangsiz = 0.5181;\t\t\t\/\/ Moon's angular size at distance a from Earth\n    $msmax = 384401;\t\t\t\/\/ Semi-major axis of Moon's orbit in km\n    $mparallax = 0.9507;\t\t\/\/ Parallax at distance a from Earth\n    $synmonth = 29.53058868;\t\/\/ Synodic month (new Moon to new Moon)\n    $this->synmonth = $synmonth;\n    $lunatbase = 2423436.0;\t\t\/\/ Base date for E. W. Brown's numbered series of lunations (1923 January 16)\n    \n    \/*  Properties of the Earth  *\/\n    \/\/ $earthrad = 6378.16;\n    \/\/ $PI = 3.14159265358979323846;\t\/\/ Assume not near black hole\n    $this->timestamp = $pdate;\n    \n    \/\/ pdate is coming in as a UNIX timstamp, so convert it to Julian\n    $pdate =  $pdate \/ 86400 + 2440587.5;\n    \n    \/* Calculation of the Sun's position *\/\n    \n    $Day = $pdate - $epoch;\t\t\t\t\t\t\t\t\/\/ Date within epoch\n    $N = $this->fixangle((360 \/ 365.2422) * $Day);\t\t\/\/ Mean anomaly of the Sun\n    $M = $this->fixangle($N + $elonge - $elongp);\t\t\/\/ Convert from perigee co-ordinates to epoch 1980.0\n    $Ec = $this->kepler($M, $eccent);\t\t\t\t\t\/\/ Solve equation of Kepler\n    $Ec = sqrt((1 + $eccent) \/ (1 - $eccent)) * tan($Ec \/ 2);\n    $Ec = 2 * rad2deg(atan($Ec));\t\t\t\t\t\t\/\/ True anomaly\n    $Lambdasun = $this->fixangle($Ec + $elongp);\t\t\/\/ Sun's geocentric ecliptic longitude\n    \n    $F = ((1 + $eccent * cos(deg2rad($Ec))) \/ (1 - $eccent * $eccent));\t\/\/ Orbital distance factor\n    $SunDist = $sunsmax \/ $F;\t\t\t\t\t\t\t\/\/ Distance to Sun in km\n    $SunAng = $F * $sunangsiz;\t\t\t\t\t\t\t\/\/ Sun's angular size in degrees\n    \n    \/* Calculation of the Moon's position *\/\n    $ml = $this->fixangle(13.1763966 * $Day + $mmlong);\t\t\t\t\/\/ Moon's mean longitude\n    $MM = $this->fixangle($ml - 0.1114041 * $Day - $mmlongp);\t\t\/\/ Moon's mean anomaly\n    $MN = $this->fixangle($mlnode - 0.0529539 * $Day);\t\t\t\t\/\/ Moon's ascending node mean longitude\n    $Ev = 1.2739 * sin(deg2rad(2 * ($ml - $Lambdasun) - $MM));\t\t\/\/ Evection\n    $Ae = 0.1858 * sin(deg2rad($M));\t\t\t\t\t\t\t\t\/\/ Annual equation\n    $A3 = 0.37 * sin(deg2rad($M));\t\t\t\t\t\t\t\t\t\/\/ Correction term\n    $MmP = $MM + $Ev - $Ae - $A3;\t\t\t\t\t\t\t\t\t\/\/ Corrected anomaly\n    $mEc = 6.2886 * sin(deg2rad($MmP));\t\t\t\t\t\t\t\t\/\/ Correction for the equation of the centre\n    $A4 = 0.214 * sin(deg2rad(2 * $MmP));\t\t\t\t\t\t\t\/\/ Another correction term\n    $lP = $ml + $Ev + $mEc - $Ae + $A4;\t\t\t\t\t\t\t\t\/\/ Corrected longitude\n    $V = 0.6583 * sin(deg2rad(2 * ($lP - $Lambdasun)));\t\t\t\t\/\/ Variation\n    $lPP = $lP + $V;\t\t\t\t\t\t\t\t\t\t\t\t\/\/ True longitude\n    $NP = $MN - 0.16 * sin(deg2rad($M));\t\t\t\t\t\t\t\/\/ Corrected longitude of the node\n    $y = sin(deg2rad($lPP - $NP)) * cos(deg2rad($minc));\t\t\t\/\/ Y inclination coordinate\n    $x = cos(deg2rad($lPP - $NP));\t\t\t\t\t\t\t\t\t\/\/ X inclination coordinate\n    \n    $Lambdamoon = rad2deg(atan2($y, $x)) + $NP;\t\t\t\t\t\t\/\/ Ecliptic longitude\n    $BetaM = rad2deg(asin(sin(deg2rad($lPP - $NP)) * sin(deg2rad($minc))));\t\t\/\/ Ecliptic latitude\n    \n    \/* Calculation of the phase of the Moon *\/\n    $MoonAge = $lPP - $Lambdasun;\t\t\t\t\t\t\t\t\t\/\/ Age of the Moon in degrees\n    $MoonPhase = (1 - cos(deg2rad($MoonAge))) \/ 2;\t\t\t\t\t\/\/ Phase of the Moon\n    \n    \/\/ Distance of moon from the centre of the Earth\n    $MoonDist = ($msmax * (1 - $mecc * $mecc)) \/ (1 + $mecc * cos(deg2rad($MmP + $mEc)));\n    \n    $MoonDFrac = $MoonDist \/ $msmax;\n    $MoonAng = $mangsiz \/ $MoonDFrac;\t\t\t\t\t\t\t\t\/\/ Moon's angular diameter\n    \n    \/\/ $MoonPar = $mparallax \/ $MoonDFrac;\t\t\t\t\t\t\t\/\/ Moon's parallax\n    \n    \/\/ store results\n    $this->phase = $this->fixangle($MoonAge) \/ 360;\t\t\t\t\t\/\/ Phase (0 to 1)\n    $this->illum = $MoonPhase;\t\t\t\t\t\t\t\t\t\t\/\/ Illuminated fraction (0 to 1)\n    $this->age = $synmonth * $this->phase;\t\t\t\t\t\t\t\/\/ Age of moon (days)\n    $this->dist = $MoonDist;\t\t\t\t\t\t\t\t\t\t\/\/ Distance (kilometres)\n    $this->angdia = $MoonAng;\t\t\t\t\t\t\t\t\t\t\/\/ Angular diameter (degrees)\n    $this->sundist = $SunDist;\t\t\t\t\t\t\t\t\t\t\/\/ Distance to Sun (kilometres)\n    $this->sunangdia = $SunAng;\t\t\t\t\t\t\t\t\t\t\/\/ Sun's angular diameter (degrees)\n  }\n  \n  private function fixangle($a) {\n    return ( $a - 360 * floor($a \/ 360) );\n  }\n  \n  \/\/  KEPLER  --   Solve the equation of Kepler.\n  private function kepler($m, $ecc) {\n    $epsilon = 0.000001;\t\/\/ 1E-6\n    $e = $m = deg2rad($m);\n    do {\n      $delta = $e - $ecc * sin($e) - $m;\n      $e -= $delta \/ ( 1 - $ecc * cos($e) );\n    }\n    while ( abs($delta) > $epsilon );\n    return $e;\n  }\n  \n  \/*  Calculates  time  of  the mean new Moon for a given\n      base date.  This argument K to this function is the\n      precomputed synodic month index, given by:\n      K = (year - 1900) * 12.3685\n      where year is expressed as a year and fractional year.\n  *\/\n  private function meanphase($sdate, $k){\n    \/\/ Time in Julian centuries from 1900 January 0.5\n    $t = ( $sdate - 2415020.0 ) \/ 36525;\n    $t2 = $t * $t;\n    $t3 = $t2 * $t;\n    $nt1 = 2415020.75933 + $this->synmonth * $k + 0.0001178 * $t2 - 0.000000155 * $t3 + 0.00033 * sin( deg2rad( 166.56 + 132.87 * $t - 0.009173 * $t2 ) );\n    return $nt1;\n  }\n  \n  \/*  Given a K value used to determine the mean phase of\n      the new moon, and a phase selector (0.0, 0.25, 0.5,\n      0.75), obtain the true, corrected phase time.\n  *\/\n  private function truephase($k, $phase){\n    $apcor = false;\n    $k += $phase;\t\t\t\t\/\/ Add phase to new moon time\n    $t = $k \/ 1236.85;\t\t\t\/\/ Time in Julian centuries from 1900 January 0.5\n    $t2 = $t * $t;\t\t\t\t\/\/ Square for frequent use\n    $t3 = $t2 * $t;\t\t\t\t\/\/ Cube for frequent use\n    $pt = 2415020.75933\t+ $this->synmonth * $k + 0.0001178 * $t2 - 0.000000155 * $t3 + 0.00033 * sin( deg2rad( 166.56 + 132.87 * $t - 0.009173 * $t2 ) );\n    $m = 359.2242 + 29.10535608 * $k - 0.0000333 * $t2 - 0.00000347 * $t3;\t\t\t\/\/ Sun's mean anomaly\n    $mprime = 306.0253 + 385.81691806 * $k + 0.0107306 * $t2 + 0.00001236 * $t3;\t\/\/ Moon's mean anomaly\n    $f = 21.2964 + 390.67050646 * $k - 0.0016528 * $t2 - 0.00000239 * $t3;\t\t\t\/\/ Moon's argument of latitude\n    if ( $phase < 0.01 || abs( $phase - 0.5 ) < 0.01 ) {\n      \/\/ Corrections for New and Full Moon\n      $pt +=  (0.1734 - 0.000393 * $t) * sin( deg2rad( $m ) )\n        + 0.0021 * sin( deg2rad( 2 * $m ) )\n        - 0.4068 * sin( deg2rad( $mprime ) )\n        + 0.0161 * sin( deg2rad( 2 * $mprime) )\n        - 0.0004 * sin( deg2rad( 3 * $mprime ) )\n        + 0.0104 * sin( deg2rad( 2 * $f ) )\n        - 0.0051 * sin( deg2rad( $m + $mprime ) )\n        - 0.0074 * sin( deg2rad( $m - $mprime ) )\n        + 0.0004 * sin( deg2rad( 2 * $f + $m ) )\n        - 0.0004 * sin( deg2rad( 2 * $f - $m ) )\n        - 0.0006 * sin( deg2rad( 2 * $f + $mprime ) )\n        + 0.0010 * sin( deg2rad( 2 * $f - $mprime ) )\n        + 0.0005 * sin( deg2rad( $m + 2 * $mprime ) );\n      $apcor = true;\n    } else if ( abs( $phase - 0.25 ) < 0.01 || abs( $phase - 0.75 ) < 0.01 ) {\n      $pt +=  (0.1721 - 0.0004 * $t) * sin( deg2rad( $m ) )\n        + 0.0021 * sin( deg2rad( 2 * $m ) )\n        - 0.6280 * sin( deg2rad( $mprime ) )\n        + 0.0089 * sin( deg2rad( 2 * $mprime) )\n        - 0.0004 * sin( deg2rad( 3 * $mprime ) )\n        + 0.0079 * sin( deg2rad( 2 * $f ) )\n        - 0.0119 * sin( deg2rad( $m + $mprime ) )\n        - 0.0047 * sin( deg2rad ( $m - $mprime ) )\n        + 0.0003 * sin( deg2rad( 2 * $f + $m ) )\n        - 0.0004 * sin( deg2rad( 2 * $f - $m ) )\n        - 0.0006 * sin( deg2rad( 2 * $f + $mprime ) )\n        + 0.0021 * sin( deg2rad( 2 * $f - $mprime ) )\n        + 0.0003 * sin( deg2rad( $m + 2 * $mprime ) )\n        + 0.0004 * sin( deg2rad( $m - 2 * $mprime ) )\n        - 0.0003 * sin( deg2rad( 2 * $m + $mprime ) );\n      if ( $phase < 0.5 )\t\t\/\/ First quarter correction\n        $pt += 0.0028 - 0.0004 * cos( deg2rad( $m ) ) + 0.0003 * cos( deg2rad( $mprime ) );\n      else\t\/\/ Last quarter correction\n        $pt += -0.0028 + 0.0004 * cos( deg2rad( $m ) ) - 0.0003 * cos( deg2rad( $mprime ) );\n      $apcor = true;\n    }\n    if (!$apcor)\t\/\/ function was called with an invalid phase selector\n      return false;\n    return $pt;\n  }\n  \/*  Find time of phases of the moon which surround the current date.\n      Five phases are found, starting and\n      ending with the new moons which bound the  current lunation.\n  *\/\n  private function phasehunt() {\n    $sdate = $this->utctojulian( $this->timestamp );\n    $adate = $sdate - 45;\n    $ats = $this->timestamp - 86400 * 45;\n    $yy = (int) gmdate( 'Y', $ats );\n    $mm = (int) gmdate( 'n', $ats );\n    \n    $k1 = floor( ( $yy + ( ( $mm - 1 ) * ( 1 \/ 12 ) ) - 1900 ) * 12.3685 );\n    $adate = $nt1 = $this->meanphase( $adate, $k1 );\n    \n    while (true) {\n      $adate += $this->synmonth;\n      $k2 = $k1 + 1;\n      $nt2 = $this->meanphase( $adate, $k2 );\n      \/\/ if nt2 is close to sdate, then mean phase isn't good enough, we have to be more accurate\n      if( abs( $nt2 - $sdate ) < 0.75 ) $nt2 = $this->truephase( $k2, 0.0 );\n      if ( $nt1 <= $sdate && $nt2 > $sdate ) break;\n      $nt1 = $nt2;\n      $k1 = $k2;\n    }\n    \n    \/\/ results in Julian dates\n    $data = array(\n      $this->truephase( $k1, 0.0 ),\n      $this->truephase( $k1, 0.25 ),\n      $this->truephase( $k1, 0.5 ),\n      $this->truephase( $k1, 0.75 ),\n      $this->truephase( $k2, 0.0 ),\n      $this->truephase( $k2, 0.25 ),\n      $this->truephase( $k2, 0.5 ),\n      $this->truephase( $k2, 0.75 )\n    );\n    \n    $this->quarters = array();\n    foreach( $data as $v )\n      $this->quarters[] = ( $v - 2440587.5 ) * 86400;\t\/\/ convert to UNIX time\n  }\n  \n  \/*  Convert UNIX timestamp to astronomical Julian time (i.e. Julian date plus day fraction).  *\/\n  private function utctojulian( $ts ) {\n    return $ts \/ 86400 + 2440587.5;\n  }\n  \n  private function get_phase( $n ) {\n    if( is_null( $this->quarters ) ) $this->phasehunt();\n    return $this->quarters[$n];\n  }\n  \n  \/* Public functions for accessing results *\/\n  \n  function phase(){\n    return $this->phase;\n  }\n  \n  function illumination(){\n    return $this->illum;\n  }\n  \n  function age(){\n    return $this->age;\n  }\n  \n  function distance(){\n    return $this->dist;\n  }\n  \n  function diameter(){\n    return $this->angdia;\n  }\n  \n  function sundistance(){\n    return $this->sundist;\n  }\n  \n  function sundiameter(){\n    return $this->sunangdia;\n  }\n  \n  function new_moon(){\n    return $this->get_phase( 0 );\n  }\n  \n  function first_quarter(){\n    return $this->get_phase( 1 );\n  }\n  \n  function full_moon(){\n    return $this->get_phase( 2 );\n  }\n  \n  function last_quarter(){\n    return $this->get_phase( 3 );\n  }\n  \n  function next_new_moon(){\n    return $this->get_phase( 4 );\n  }\n  \n  function next_first_quarter(){\n    return $this->get_phase( 5 );\n  }\n  \n  function next_full_moon(){\n    return $this->get_phase( 6 );\n  }\n  \n  function next_last_quarter(){\n    return $this->get_phase( 7 );\n  }\n  \n  function phase_Id() {\n    if($this->phase >= 0 && $this->phase < 0.025) return 0; \t\t\t\/\/2.5%\n    else if($this->phase >= 0.025 && $this->phase < 0.225) return 1; \t\/\/20%\n    else if($this->phase >= 0.225 && $this->phase < 0.275) return 2; \t\/\/5%\n    else if($this->phase >= 0.275 && $this->phase < 0.475) return 3; \t\/\/20%\n    else if($this->phase >= 0.475 && $this->phase < 0.525) return 4; \t\/\/5%\n    else if($this->phase >= 0.525 && $this->phase < 0.725) return 5; \t\/\/20%\n    else if($this->phase >= 0.725 && $this->phase < 0.775) return 6; \t\/\/5%\n    else if($this->phase >= 0.775 && $this->phase < 0.975) return 7; \t\/\/20%\n    else return 8;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\/\/2.5%\n  }  \n}\n\nfunction phase_name($num=0,$lang='FR') {\n  $namesEN = array( 'New Moon', 'Waxing Crescent', 'First Quarter', 'Waxing Gibbous', 'Full Moon', 'Waning Gibbous', 'Third Quarter', 'Waning Crescent', 'New Moon' );\n  $namesFR = array( 'Nouvelle lune', 'Premier croissant', 'Premier quartier', 'Lune gibbeuse croissante', 'Pleine lune', 'Lune gibbeuse décroissante', 'Dernier quartier', 'Dernier croissant', 'Nouvelle lune' );\n  if ($lang == 'EN') return $namesEN[$num];\n  else return $namesFR[$num];\n}\n\nfunction dateTranslate($string='',$lang='FR') {\n  $jours_anglais = array(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\",\"Saturday\",\"Sunday\");\n  $jours_fr = array(\"Lundi\", \"Mardi\", \"Mercredi\",\"Jeudi\",\"Vendredi\",\"Samedi\",\"Dimanche\");\n  if ($lang == 'EN') return str_replace($jours_fr, $jours_anglais, $string);\n  else return str_replace($jours_anglais, $jours_fr, $string);\n}\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/ Dates des éclipses lunaire\n$eclipseLunaire = array(\n  '2023-03-27' => array('time'=>'21h19', 'type'=>'Pénombrale'),\n  '2023-05-05' => array('time'=>'21h19', 'type'=>'Pénombrale'),\n  '2023-10-28' => array('time'=>'22h14', 'type'=>'Partielle'),\n  '2024-03-25' => array('time'=>'06h48', 'type'=>'Pénombrale'),\n  '2024-09-18' => array('time'=>'04h44', 'type'=>'Partielle'),\n  '2025-03-14' => array('time'=>'07h08', 'type'=>'Totale'),\n  '2025-09-07' => array('time'=>'20h20', 'type'=>'Totale'),\n  '2026-08-28' => array('time'=>'06h12', 'type'=>'Partielle'),\n  '2027-02-21' => array('time'=>'00h12', 'type'=>'Pénombrale'),\n  '2028-01-12' => array('time'=>'05h13', 'type'=>'Partielle'),\n  '2028-07-06' => array('time'=>'22h01', 'type'=>'Pénombrale'),\n  '2028-12-31' => array('time'=>'17h52', 'type'=>'Totale'),\n  '2029-06-26' => array('time'=>'05h22', 'type'=>'Totale'),\n  '2029-12-20' => array('time'=>'23h41', 'type'=>'Totale'),\n  '2030-06-15' => array('time'=>'21h52', 'type'=>'Pénombrale'),\n  '2030-12-09' => array('time'=>'23h27', 'type'=>'Pénombrale')\n);\n\n\/\/ create an instance of the class\n$moon = new MoonPhase($time);\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/ Divers\n$phase_id = $moon->phase_Id();\n$phase_name = phase_name($phase_id,'FR');\n$illumination_widget = $moon->illumination();\n$illumination = round($illumination_widget*100, 0);\n$next_new = date('l d\/m\/Y', $moon->next_new_moon());\n$age = round( $moon->age(), 1 );\n$stage = $moon->phase() < 0.5 ? 'Croissante' : 'Décroissante'; \/\/ 'montante' : 'descendante'\n$distance = round( $moon->distance(), 0 );\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/ Eclipse lunaire\n$eclipseType = '';\n$eclipseTime = '';\nif (isset($eclipseLunaire[date('Y-m-d',$time)]) && $phase_id == 4) {\n  $eclipseType = $eclipseLunaire[date('Y-m-d',$time)]['type'];\n  $eclipseTime = $eclipseLunaire[date('Y-m-d',$time)]['time'];\n  $phase_id = 9;\n}\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/ Date de la prochaine pleine lune\n$next_full = date('l d\/m\/Y', $moon->full_moon());\n$next_full2 = date('l d\/m\/Y', $moon->next_full_moon());\nif( $moon->full_moon() <= $time ){\n  $moon2 = new MoonPhase($moon->next_full_moon());\n  $next_full = date('l d\/m\/Y', $moon2->full_moon());\n  $next_full2 = date('l d\/m\/Y', $moon2->next_full_moon());\n}\n$next_full = dateTranslate($next_full);\n$next_full2 = dateTranslate($next_full2);\n$next_new = dateTranslate($next_new);\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ LOG \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$scenario->setLog('| tag(Moon_Phase) - [Autre] : ' . $stage);\n$scenario->setLog('| tag(Moon_PhaseName) - [Autre] : '.$phase_name);\n$scenario->setLog('| tag(Moon_Age) - [Numérique] : '.$age);\n$scenario->setLog('| tag(Next_Full_Moon) - [Autre] : '.$next_full);\n$scenario->setLog('| tag(Next_Full_Moon2) - [Autre] : '.$next_full2);\n$scenario->setLog('| tag(Next_New_Moon) - [Autre] : '.$next_new);\n$scenario->setLog('| tag(Moon_Distance) - [Numérique] : '.$distance);\n$scenario->setLog('| tag(Moon_Illumination) - [Numérique] : '.$illumination);\nif ($tags['#debug#'] == 1) {\n  $scenario->setLog('| ┌─────────────────── Logs for widget ───────────────────');\n  $scenario->setLog('| | $illumination_widget : '.$illumination_widget);\n  $scenario->setLog('| | phaseId : ' . $phase_id);\n  $scenario->setLog('| | phase_name : '. $phase_name);\n  $scenario->setLog('| | eclipseType : '. $eclipseType);\n  $scenario->setLog('| | eclipseTime : '. $eclipseTime);  \n  $scenario->setLog('| └───────────────────────────────────────────────────');\n}\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ TAG \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$tags['#Moon_Phase#'] = $stage;\n$tags['#Moon_PhaseName#'] = $phase_name;\n$tags['#Moon_Age#'] = $age;\n$tags['#Next_Full_Moon#'] = $next_full;\n$tags['#Next_Full_Moon2#'] = $next_full2;\n$tags['#Next_New_Moon#'] = $next_new;\n$tags['#Moon_Distance#'] = $distance;\n$tags['#Moon_Illumination#'] = $illumination;\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ WIDGET \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$tags['#json#']['Lune'] = array (\n  \"phase\" => $phase_id,\n  \"texte\" => $phase_name,\n  \"lum\" => $illumination_widget,\n  \"eclipseType\" => $eclipseType,\n  \"eclipseTime\" => $eclipseTime\n);\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$scenario->setTags($tags);\n$scenario->setLog('└────────────────────────────');",
                                                "options": [],
                                                "order": "0"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "element",
                            "subtype": "",
                            "expression": "2026",
                            "options": [],
                            "order": "5",
                            "element": {
                                "name": "",
                                "type": "code",
                                "options": [],
                                "order": "0",
                                "subElements": [
                                    {
                                        "name": "",
                                        "type": "code",
                                        "subtype": "action",
                                        "options": {
                                            "collapse": "1",
                                            "enable": "1"
                                        },
                                        "order": "0",
                                        "expressions": [
                                            {
                                                "type": "code",
                                                "subtype": "",
                                                "expression": "\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ WIDGET \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$scenario->setLog('┌─────────────────── WIDGET');\n$tags = $scenario->getTags(); \/\/récupère la liste des tags\nif (!isset($tags['#json#'])) {\n  $scenario->setLog('| Aucun tag #json# passé en paramêtre !!!');\n  $tags['#json#'] = array();\n}\n$json = json_encode($tags['#json#']);\n$scenario->setLog('| $json = ' . $json);\n$tags['#json#'] = $json;\n$scenario->setTags($tags);\n$scenario->setLog('└────────────────────────────');",
                                                "options": [],
                                                "order": "0"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "action",
                            "subtype": "",
                            "expression": "event",
                            "options": {
                                "enable": "1",
                                "background": "0",
                                "cmd": "#[InfoJour][Type_de_jour][json]#",
                                "value": "\"tag(json)\""
                            },
                            "order": "6"
                        }
                    ]
                }
            ]
        }
    ]
}